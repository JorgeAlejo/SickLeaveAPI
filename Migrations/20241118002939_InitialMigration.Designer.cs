// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace SickLeaveAPI.Migrations
{
    [DbContext(typeof(SickLeaveDbContext))]
    [Migration("20241118002939_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CobroJuridico", b =>
                {
                    b.Property<Guid>("IdCobro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("CedulaAbogado")
                        .HasColumnType("bigint");

                    b.Property<string>("DerechoPeticion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCobro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdEpsArl")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdIncapacidad")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Tutela")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdCobro");

                    b.ToTable("CobrosJuridicos");
                });

            modelBuilder.Entity("EPS_ARL", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumeroContacto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.HasKey("Id");

                    b.ToTable("EPS_ARLs");
                });

            modelBuilder.Entity("Incapacidad", b =>
                {
                    b.Property<Guid>("IDIncapacidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("CedulaColaborador")
                        .HasColumnType("bigint");

                    b.Property<long>("CedulaRH")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("DocumentoAdjunto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdEpsArl")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("integer");

                    b.HasKey("IDIncapacidad");

                    b.ToTable("Incapacidades");
                });

            modelBuilder.Entity("PagoIncapacidad", b =>
                {
                    b.Property<Guid>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("CedulaTesorero")
                        .HasColumnType("bigint");

                    b.Property<int>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaRadicacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdIncapacidad")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("IdPago");

                    b.ToTable("PagosIncapacidades");
                });

            modelBuilder.Entity("UserAbogado", b =>
                {
                    b.Property<long>("Cedula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Cedula"));

                    b.Property<long>("CedulaAdministrador")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaDeCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("SegundoApellido")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("SegundoNombre")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Cedula");

                    b.ToTable("UserAbogados");
                });

            modelBuilder.Entity("UserAdmin", b =>
                {
                    b.Property<long>("Cedula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Cedula"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("text");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("text");

                    b.HasKey("Cedula");

                    b.ToTable("UserAdmins");
                });

            modelBuilder.Entity("UserColaborador", b =>
                {
                    b.Property<long>("Cedula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Cedula"));

                    b.Property<long>("CedulaAdministrador")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaDeCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("SegundoApellido")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("SegundoNombre")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Cedula");

                    b.ToTable("UserColaboradors");
                });

            modelBuilder.Entity("UserRH", b =>
                {
                    b.Property<long>("Cedula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Cedula"));

                    b.Property<long>("CedulaAdministrador")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaDeCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("SegundoApellido")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("SegundoNombre")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Cedula");

                    b.ToTable("UserRHs");
                });

            modelBuilder.Entity("UserTesorero", b =>
                {
                    b.Property<long>("Cedula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Cedula"));

                    b.Property<long>("CedulaAdministrador")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaDeCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("SegundoApellido")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("SegundoNombre")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Cedula");

                    b.ToTable("UserTesoreros");
                });
#pragma warning restore 612, 618
        }
    }
}
